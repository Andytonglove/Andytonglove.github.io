<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>博客评论区搭建——utterances</title>
    <link href="/2022/09/08/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8C%BA%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/09/08/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8C%BA%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>博客主体搭建基本完成，但是作为静态网页目前并没有评论区功能。本博客即是记载了搭建博客评论区的过程和一些相关设置项的说明。这里我是基于Hexo-fluid，通过<a href="https://utteranc.es/">utterances</a>来进行评论区搭建，整体而言非常轻松且快速，支持很好。</p><h3 id="博客评论区搭建"><a href="#博客评论区搭建" class="headerlink" title="博客评论区搭建"></a>博客评论区搭建</h3><p>对比了诸多博客评论区搭建的插件，国内的几个基本是无法考虑的，又要考虑到其成熟性，那么最后的选择就在<code>Gitalk</code>、<code>Valine</code>以及<code>utterances</code>中考虑了。最后我的选择是utterances，事实证明这确实是最轻松愉快的搭建方式。</p><ol><li><p><code>评论区仓库新建</code>：utterances是基于<code>GitHub issues</code>来搭建的评论区，很有意思的一个设计。那么既然是基于此，就需要一个Github仓库来承载其评论系统，这里只需要新建一个空的公共仓库即可。</p></li><li><p><code>安装utterances</code>：在Github上安装<a href="https://github.com/apps/utterances">utterances app</a>。这里安装过之后下一次打开就显示的不是install而是configure了。配置上，选择刚刚新建的评论区仓库，安装即可。</p></li><li><p><code>配置utterances</code>：在<a href="https://utteranc.es/">https://utteranc.es/</a>上配置相关选项。</p><ul><li>选择<code>repo</code>为之前选择的评论区仓库，这里需要填入的是username&#x2F;reponame形式。</li><li>在<code>Blog Post ↔️ Issue Mapping</code>中按需选择，这里我选择了根据title进行分组。</li><li>剩下的如<code>Issue Label</code>可自行按需设置。</li><li>复制最后<code>Enable Utterances</code>中的信息，可在后续设置中使用。这里基本就完成了配置设置，可以进行下一步fluid配置了。</li></ul></li><li><p><code>添加到Hexo-Fluid</code>：打开fluid主题配置文件(_config.fluid.yml)，将<code>comments:enable</code>设置为true以开启评论，同时修改<code>type</code>设为utterances。随后在后面找到comments的具体配置，配置可参考之前复制的信息如下：</p> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">utterances:<br>    repo: username/远程评论仓库名<br>    issue_term: title<br>    label: #<br>    theme: github-light<br>    theme_dark: github-dark<br>    crossorigin: anonymous<br></code></pre></td></tr></table></figure></li><li><p><code>评论</code>：接下来就可以开心的进行评论了！utterances的配置的确是轻松+愉悦！如果想要关闭某博客的评论区，也可以直接在上方博客头设置中加上<code>comments: false</code>即可。这就是站在巨人的肩膀上吧。</p></li></ol><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_43641850/article/details/105284634">https://blog.csdn.net/weixin_43641850/article/details/105284634</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>utterances</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建踩坑记录+DNS修复</title>
    <link href="/2022/09/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/09/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>经过一些教程和参考文档的查阅，基本上博客的主体和修改都完成了，今后就可以顺利地开始写一些东西了。这里记录一下自己博客搭建踩坑的过程，依然是希望能够有所帮助。顺带记录一下电脑DNS故障修复的一次经历，作为一点附带的收获。^^</p><h3 id="博客搭建踩坑"><a href="#博客搭建踩坑" class="headerlink" title="博客搭建踩坑"></a>博客搭建踩坑</h3><ol><li><p><code>fluid配置</code>：fluid确实很漂亮好用，配置上这里推荐用npm直接安装后拷贝<strong>fluid的官方_config.yml</strong>并进行自己的修改，相关修改之处见参考文档，可diy性还挺强的，后续可能会考虑自己改下。</p></li><li><p><code>Git推送Hexo</code>：作为hexo的初使用者，经常会遇到更改了一些配置之后直接三件套却推送不上去的时候。直接<code>hexo clean</code>会删掉上传的资源文件，但直接<code>hexo d</code>往往会出现报错<code>spawn failed</code>，其实这个问题并不需要重新配置SSH或者是Git，也算是一个经常出现的问题，在这里基本上只用删除掉blog文件夹下的<code>.deploy_git</code>文件夹再重新生成推送即可。</p></li><li><p>……</p></li></ol><h3 id="DNS修复"><a href="#DNS修复" class="headerlink" title="DNS修复"></a>DNS修复</h3><p>之所以要写DNS修复，确实是因为昨天出现的一些电脑DNS的问题，尝试后找到了一个比较简单好用的解决方案，所以在这里做一些记载。</p><p><code>问题症状</code>：正常联网情况下，浏览器无法打开百度首页，但是其他如百度知道、百度贴吧与其他网站等均可以正常打开，很诡异的一个网络错误。</p><p><code>TLDR之解决方案</code>：在控制面板中选择<code>打开网络和共享中心</code>，然后点击<code>更改适配器选项</code>。右键点击<code>已连接网络（WLAN）-属性</code>。找到<code>Internet 协议版本4</code>，在<code>属性</code>中将<code>自动获得DNS服务器地址</code>改为<code>使用下面的DNS服务器地址</code>，具体修改如下并刷新即可解决：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">首选DNS服务器：114.114.114.114<br>备选DNS服务器：8.8.8.8<br></code></pre></td></tr></table></figure><p><code>解决过程</code>：</p><ol><li><p>首先看一下网络，连接正常，梯子连接正常，lsp修复正常，断开梯子并运行<code>ipconfig /flushdns</code>无效。这个时候其实我是有点慌的，因为我不确定到底是哪里有问题。</p></li><li><p>初步猜测不是网络问题之后，尝试了ping一下百度：<code>ping www.baidu.com</code>，看一下是不是百度的问题。ping了之后发现，百度首页全部丢包ping不上，这里基本可以确定是适配器设置里DNS的问题。这里有一个很有意思的插曲，发现ping百度的全部被分流到了<code>Ping www.a.shifen.com</code>，还以为是被劫持了，后来查了才知道原来十分就是百度的中间网站。</p></li><li><p>查找后按照上面的解决方案进行了修改，即可解决，并不用去删除重设cookie那些。</p></li></ol><blockquote><p>参考：<a href="https://jingyan.baidu.com/article/86fae3466f07b87c48121a40.html">https://jingyan.baidu.com/article/86fae3466f07b87c48121a40.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>Git</tag>
      
      <tag>Hexo</tag>
      
      <tag>DNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客-搭建blog</title>
    <link href="/2022/09/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BAblog/"/>
    <url>/2022/09/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BAblog/</url>
    
    <content type="html"><![CDATA[<p>一直都很想搭建一个自己的博客，这几天刚好有时间，就花了几个小时借助<a href="https://hexo.io/">Hexo</a>和<a href="https://pages.github.com/">GitHub Pages</a>简单地搭建了一个自己的博客，可以说是非常简单好用。本文主要讲一下博客搭建的过程和搭建过程中踩的雷，希望能有参考价值。今后如果有时间也会自己在博客上写一些有关生活、思考和代码的东西，期待能够一直更新下去。</p><h2 id="博客搭建过程"><a href="#博客搭建过程" class="headerlink" title="博客搭建过程"></a>博客搭建过程</h2><h3 id="博客搭建前期准备"><a href="#博客搭建前期准备" class="headerlink" title="博客搭建前期准备"></a>博客搭建前期准备</h3><ol><li><code>Node.js</code>，在之前我已经因为小程序和前端需要进行过相关nvm、npm和nodejs系列配置，故这里不再赘述。</li><li><code>Git</code>，这里搭建建议是配置Github上的SSH密钥的，也可以配置一下淘宝源或者其他，很久之前就配置过了，同上不再赘述。</li></ol><h3 id="博客整体骨架结构搭建——Hexo"><a href="#博客整体骨架结构搭建——Hexo" class="headerlink" title="博客整体骨架结构搭建——Hexo"></a>博客整体骨架结构搭建——Hexo</h3><ol><li><code>npm install -g hexo-cli</code>安装Hexo相关脚手架，方便后续工作。可用<code>hexo -v</code>检查一下。</li><li>创建一个blog文件夹，用以存放博客相关文件，作为后续<code>git bash</code>的工作文件夹。</li><li>在文件夹中<code>hexo init</code>初始化博客基本框架，随后<code>npm install</code>配置一下node，这里基本完成本地搭建操作。</li><li>运行下述命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g <span class="hljs-comment"># 加载hexo基础文件，生成静态网页</span><br>$ hexo s <span class="hljs-comment"># 创建一个服务器，本地预览效果</span><br>$ hexo d <span class="hljs-comment"># 用以部署到远端github上</span><br></code></pre></td></tr></table></figure></li><li>在本地浏览器查看 <a href="http://localhost:4000/">http://localhost:4000/</a> 界面，会看到hexo欢迎页，这里可以看到已经在本地创建成功了。最后部署到远端的命令则需要先完成下面的步骤。</li><li>关于博客主题，这里可以去Github或者是B站上搜索hexo theme，根据各自的参考文档说明进行安装即可。这里我使用的是 <strong><a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a></strong> 主题，有其个性化配置操作。</li></ol><h3 id="将博客部署到远端上——GitHub-Pages"><a href="#将博客部署到远端上——GitHub-Pages" class="headerlink" title="将博客部署到远端上——GitHub Pages"></a>将博客部署到远端上——GitHub Pages</h3><ol><li><p>在Github上新建一个个人仓库，仓库名设置为<code>username.github.io</code>，这里username是自己的github用户名。至于readme初始化必要性不大，这里在创建后也可以直接在仓库设置里面选择主题。</p></li><li><p>远程仓库准备完毕，现在需要在blog文件夹根目录下的<code>_config.yml</code>文件中配置自己的远程仓库地址，具体如下：</p> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">deploy:<br>    type: git<br>    repository: 远程仓库SSH地址<br>    branch: master<br></code></pre></td></tr></table></figure></li><li><p>文件夹下git bash运行<code>npm i hexo-deployer-git</code>，安装部署脚手架，然后就可以用<code>hexo new post &quot;article title&quot;</code>命令创建新的博客文章了。随后还是按上面的命令三件套更新发布文章。注意，这里每次无论<code>hexo g</code>或<code>hexo s</code>，都最好先使用<code>hexo clean</code>清除本地缓存。</p></li><li><p>剩余的其他设置还在摸索中，这里可以在<code>_config.yml</code>中修改大部分的配置……其实在<a href="https://hexo.io/zh-cn/docs">Hexo参考文档</a>里写的都挺清楚的，剩下的就不再赘述了。主题配置见<a href="https://hexo.fluid-dev.com/docs/guide/">Fluid配置手册</a>。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/07/hello-world/"/>
    <url>/2022/09/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
